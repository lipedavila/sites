<!DOCTYPE html>
<html>
<head>
  <title>Obter Token Arkose</title>
</head>
<body>

<h1>Obter Token Arkose</h1>

<button id="get-token">Obter Token</button>

<div id="token-output"></div>

<script>
  async function getArkoseToken() {
    try {
      const response = await fetch('https://ai.fakeopen.com/api/arkose/params');
      if (response.status !== 200) {
        throw new Error(`Failed to get arkose params: ${response.status} ${response.statusText}`);
      }
      const data = await response.json();
      if (!data.endpoint || !data.headers || !data.form) {
        throw new Error(`Invalid arkose params: ${JSON.stringify(data)}`);
      }

      const tokenResponse = await fetch(data.endpoint, {
        method: 'POST',
        headers: data.headers,
        body: JSON.stringify(data.form)
      });

      if (tokenResponse.status !== 200) {
        throw new Error(`Failed to get arkose token: ${tokenResponse.status} ${tokenResponse.statusText}`);
      }

      const tokenData = await tokenResponse.json();
      if (!tokenData.token) {
        throw new Error(`Failed to get arkose token: ${JSON.stringify(tokenData)}`);
      }

      const token = tokenData.token;
      if (!token.includes('|rid=') || !token.includes('|sup=')) {
        throw new Error(`Invalid arkose token: ${token}`);
      }

      return token;
    } catch (error) {
      console.error('Error fetching Arkose token:', error);
      return null;
    }
  }

  document.addEventListener('DOMContentLoaded', function() {
    const button = document.querySelector('#get-token');
    const output = document.querySelector('#token-output');

    button.addEventListener('click', async function() {
      const token = await getArkoseToken();
      if (token) {
        output.innerHTML = `Token Arkose recebido: ${token}`;
      } else {
        output.innerHTML = 'Falha ao obter o token Arkose.';
      }
    });
  });
</script>

</body>
</html>





<!DOCTYPE html>
<html>
<head>
  <title>ChatGPT com Token de Pool</title>
</head>
<body>

<h1>ChatGPT com Token de Pool</h1>

<form id="chat-form">
  <input type="text" id="user-input" placeholder="Digite sua pergunta" required>
  <input type="submit" value="Enviar">
</form>

<div id="chat-output"></div>

<script>
  async function fetchPoolToken() {
    try {
      const response = await fetch('https://ai.fakeopen.com/v1/chat/completions', {
        method: 'POST',
        headers: {
          'Authorization': 'Bearer pk-this-is-a-real-free-pool-token-for-everyone',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({})
      });
      const data = await response.json();
      return data.token;
    } catch (error) {
      console.error('Error fetching pool token:', error);
      return null;
    }
  }

  async function fetchChatResponse(token, question) {
    try {
      const payload = {
        model: 'gpt-3.5-turbo',
        prompt: question,
        max_tokens: 100
      };
      const response = await fetch('https://api.openai.com/v1/engines/davinci-codex/completions', {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(payload)
      });
      const data = await response.json();
      return data.choices[0].text.trim();
    } catch (error) {
      console.error('Error fetching chat response:', error);
      return 'Error';
    }
  }

  document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('#chat-form');
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      const question = document.querySelector('#user-input').value;
      const poolToken = await fetchPoolToken();
      if (poolToken) {
        const answer = await fetchChatResponse(poolToken, question);
        document.querySelector('#chat-output').innerHTML += `<div>User: ${question}</div><div>Bot: ${answer}</div>`;
      }
    });
  });
</script>

</body>
</html>
